class Solution {
    public static int recur(int i , int j , int[] arr , int[][] dp) {
        if(i == j)
          return 0;
        if(dp[i][j] != -1)
          return dp[i][j];
        int mini = Integer.MAX_VALUE;
        for(int k = i; k <= j - 1; k++) {
            int steps = arr[i - 1] * arr[k] * arr[j] + recur(i , k , arr , dp) + recur(k + 1 , j , arr , dp); 
            mini = Math.min(mini , steps);
        }
        return dp[i][j] = mini;
    }
    static int matrixMultiplication(int arr[]) {
        // code here
        int n = arr.length;
        int dp[][] = new int[n][n];
        for(int[] nums : dp)
           Arrays.fill(nums , -1);
        return recur(1 , arr.length - 1, arr , dp);
    }
}
